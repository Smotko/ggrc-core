
.. WARNING! This file is autogenerated and should not be edited manually.

Services
========


``/api/cycles``
---------------

Methods::

    POST   /api/cycles
    GET    /api/cycles
    GET    /api/cycles/{id}
    PUT    /api/cycles/{id}
    DELETE /api/cycles/{id}

Model :class:`ggrc_workflows.models.cycle.Cycle`


POST Example::

    POST /api/cycles/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "cycle": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle_task_groups": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "is_current": "",
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "title": "Object title",
        "workflow": "",
      }
    }

    Response body:
    {
      "cycle": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle_task_groups": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_current": "",
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "title": "Object title",
        "type": "Cycle",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

GET Example::


    GET /api/cycles/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "cycle": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle_task_groups": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_current": "",
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "title": "Object title",
        "type": "Cycle",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

PUT Example::

    PUT /api/cycles/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "cycle": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle_task_groups": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "is_current": "",
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "title": "Object title",
        "workflow": "",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "cycle": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle_task_groups": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_current": "",
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "title": "Object title",
        "type": "Cycle",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

``/api/cycle_task_entries``
---------------------------

Methods::

    POST   /api/cycle_task_entries
    GET    /api/cycle_task_entries
    GET    /api/cycle_task_entries/{id}
    PUT    /api/cycle_task_entries/{id}
    DELETE /api/cycle_task_entries/{id}

Model :class:`ggrc_workflows.models.cycle_task_entry.CycleTaskEntry`


POST Example::

    POST /api/cycle_task_entries/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_entry": {
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_group_object_task": "",
        "description": "Object <b>description</b>",
        "is_declining_review": "",
        "related_destinations": [],
        "related_sources": [],
      }
    }

    Response body:
    {
      "cycle_task_entry": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_object_task": "",
        "description": "Object <b>description</b>",
        "id": 1,
        "is_declining_review": "",
        "modified_by": { "id": 1, "type": "Person"},
        "related_destinations": [],
        "related_sources": [],
        "type": "CycleTaskEntry",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

GET Example::


    GET /api/cycle_task_entries/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "cycle_task_entry": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_object_task": "",
        "description": "Object <b>description</b>",
        "id": 1,
        "is_declining_review": "",
        "modified_by": { "id": 1, "type": "Person"},
        "related_destinations": [],
        "related_sources": [],
        "type": "CycleTaskEntry",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

PUT Example::

    PUT /api/cycle_task_entries/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_entry": {
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_group_object_task": "",
        "description": "Object <b>description</b>",
        "is_declining_review": "",
        "related_destinations": [],
        "related_sources": [],
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "cycle_task_entry": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_object_task": "",
        "description": "Object <b>description</b>",
        "id": 1,
        "is_declining_review": "",
        "modified_by": { "id": 1, "type": "Person"},
        "related_destinations": [],
        "related_sources": [],
        "type": "CycleTaskEntry",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

``/api/cycle_task_groups``
--------------------------

Methods::

    POST   /api/cycle_task_groups
    GET    /api/cycle_task_groups
    GET    /api/cycle_task_groups/{id}
    PUT    /api/cycle_task_groups/{id}
    DELETE /api/cycle_task_groups/{id}

Model :class:`ggrc_workflows.models.cycle_task_group.CycleTaskGroup`


POST Example::

    POST /api/cycle_task_groups/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_group_tasks": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group": "",
        "title": "Object title",
      }
    }

    Response body:
    {
      "cycle_task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_tasks": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group": "",
        "title": "Object title",
        "type": "CycleTaskGroup",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

GET Example::


    GET /api/cycle_task_groups/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "cycle_task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_tasks": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group": "",
        "title": "Object title",
        "type": "CycleTaskGroup",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

PUT Example::

    PUT /api/cycle_task_groups/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_group_tasks": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group": "",
        "title": "Object title",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "cycle_task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_group_tasks": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_due_date": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group": "",
        "title": "Object title",
        "type": "CycleTaskGroup",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

``/api/cycle_task_group_object_tasks``
--------------------------------------

Methods::

    POST   /api/cycle_task_group_object_tasks
    GET    /api/cycle_task_group_object_tasks
    GET    /api/cycle_task_group_object_tasks/{id}
    PUT    /api/cycle_task_group_object_tasks/{id}
    DELETE /api/cycle_task_group_object_tasks/{id}

Model :class:`ggrc_workflows.models.cycle_task_group_object_task.CycleTaskGroupObjectTask`


POST Example::

    POST /api/cycle_task_group_object_tasks/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_group_object_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_entries": "",
        "cycle_task_group": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "related_destinations": [],
        "related_sources": [],
        "response_options": "",
        "secondary_contact": "",
        "selected_response_options": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group_task": "",
        "task_type": "",
        "title": "Object title",
      }
    }

    Response body:
    {
      "cycle_task_group_object_task": {
        "allow_change_state": "",
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_entries": "",
        "cycle_task_group": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "finished_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "related_destinations": [],
        "related_sources": [],
        "response_options": "",
        "secondary_contact": "",
        "selected_response_options": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group_task": "",
        "task_type": "",
        "title": "Object title",
        "type": "CycleTaskGroupObjectTask",
        "updated_at": "2015-08-14T14:24:43",
        "verified_date": null,
      }
    }

GET Example::


    GET /api/cycle_task_group_object_tasks/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "cycle_task_group_object_task": {
        "allow_change_state": "",
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_entries": "",
        "cycle_task_group": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "finished_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "related_destinations": [],
        "related_sources": [],
        "response_options": "",
        "secondary_contact": "",
        "selected_response_options": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group_task": "",
        "task_type": "",
        "title": "Object title",
        "type": "CycleTaskGroupObjectTask",
        "updated_at": "2015-08-14T14:24:43",
        "verified_date": null,
      }
    }

PUT Example::

    PUT /api/cycle_task_group_object_tasks/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "cycle_task_group_object_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "cycle": "",
        "cycle_task_entries": "",
        "cycle_task_group": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "related_destinations": [],
        "related_sources": [],
        "response_options": "",
        "secondary_contact": "",
        "selected_response_options": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group_task": "",
        "task_type": "",
        "title": "Object title",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "cycle_task_group_object_task": {
        "allow_change_state": "",
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "cycle": "",
        "cycle_task_entries": "",
        "cycle_task_group": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "finished_date": "2015-08-14",
        "id": 1,
        "is_verification_needed": "",
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "related_destinations": [],
        "related_sources": [],
        "response_options": "",
        "secondary_contact": "",
        "selected_response_options": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_group_task": "",
        "task_type": "",
        "title": "Object title",
        "type": "CycleTaskGroupObjectTask",
        "updated_at": "2015-08-14T14:24:43",
        "verified_date": null,
      }
    }

``/api/task_groups``
--------------------

Methods::

    POST   /api/task_groups
    GET    /api/task_groups
    GET    /api/task_groups/{id}
    PUT    /api/task_groups/{id}
    DELETE /api/task_groups/{id}

Model :class:`ggrc_workflows.models.task_group.TaskGroup`


POST Example::

    POST /api/task_groups/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "lock_task_order": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group_objects": [],
        "task_group_tasks": "",
        "title": "Object title",
        "workflow": "",
      }
    }

    Response body:
    {
      "task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "lock_task_order": "",
        "modified_by": { "id": 1, "type": "Person"},
        "objects": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group_objects": [],
        "task_group_tasks": "",
        "title": "Object title",
        "type": "TaskGroup",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

GET Example::


    GET /api/task_groups/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "lock_task_order": "",
        "modified_by": { "id": 1, "type": "Person"},
        "objects": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group_objects": [],
        "task_group_tasks": "",
        "title": "Object title",
        "type": "TaskGroup",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

PUT Example::

    PUT /api/task_groups/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "lock_task_order": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group_objects": [],
        "task_group_tasks": "",
        "title": "Object title",
        "workflow": "",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "task_group": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "lock_task_order": "",
        "modified_by": { "id": 1, "type": "Person"},
        "objects": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group_objects": [],
        "task_group_tasks": "",
        "title": "Object title",
        "type": "TaskGroup",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

``/api/task_group_objects``
---------------------------

Methods::

    POST   /api/task_group_objects
    GET    /api/task_group_objects
    GET    /api/task_group_objects/{id}
    PUT    /api/task_group_objects/{id}
    DELETE /api/task_group_objects/{id}

Model :class:`ggrc_workflows.models.task_group_object.TaskGroupObject`


POST Example::

    POST /api/task_group_objects/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "task_group_object": {
        "context": { "id": 1, "type": "Context" },
        "end_date": "2015-08-14",
        "object": "",
        "start_date": "2015-08-14",
        "task_group": "",
      }
    }

    Response body:
    {
      "task_group_object": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "type": "TaskGroupObject",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

GET Example::


    GET /api/task_group_objects/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "task_group_object": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "type": "TaskGroupObject",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

PUT Example::

    PUT /api/task_group_objects/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "task_group_object": {
        "context": { "id": 1, "type": "Context" },
        "end_date": "2015-08-14",
        "object": "",
        "start_date": "2015-08-14",
        "task_group": "",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "task_group_object": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "type": "TaskGroupObject",
        "updated_at": "2015-08-14T14:24:43",
      }
    }

``/api/task_group_tasks``
-------------------------

Methods::

    POST   /api/task_group_tasks
    GET    /api/task_group_tasks
    GET    /api/task_group_tasks/{id}
    PUT    /api/task_group_tasks/{id}
    DELETE /api/task_group_tasks/{id}

Model :class:`ggrc_workflows.models.task_group_task.TaskGroupTask`


POST Example::

    POST /api/task_group_tasks/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "task_group_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "object_approval": "",
        "response_options": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "task_type": "",
        "title": "Object title",
      }
    }

    Response body:
    {
      "task_group_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "response_options": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "task_type": "",
        "title": "Object title",
        "type": "TaskGroupTask",
        "updated_at": "2015-08-14T14:24:43",
        "view_end_date": "",
        "view_start_date": "",
      }
    }

GET Example::


    GET /api/task_group_tasks/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "task_group_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "response_options": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "task_type": "",
        "title": "Object title",
        "type": "TaskGroupTask",
        "updated_at": "2015-08-14T14:24:43",
        "view_end_date": "",
        "view_start_date": "",
      }
    }

PUT Example::

    PUT /api/task_group_tasks/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "task_group_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "object_approval": "",
        "response_options": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "task_type": "",
        "title": "Object title",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "task_group_task": {
        "contact": "",
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "object_approval": "",
        "response_options": "",
        "secondary_contact": "",
        "slug": "OBJECT-1",
        "sort_index": "",
        "start_date": "2015-08-14",
        "task_group": "",
        "task_type": "",
        "title": "Object title",
        "type": "TaskGroupTask",
        "updated_at": "2015-08-14T14:24:43",
        "view_end_date": "",
        "view_start_date": "",
      }
    }

``/api/workflows``
------------------

Methods::

    POST   /api/workflows
    GET    /api/workflows
    GET    /api/workflows/{id}
    PUT    /api/workflows/{id}
    DELETE /api/workflows/{id}

Model :class:`ggrc_workflows.models.workflow.Workflow`


POST Example::

    POST /api/workflows/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "workflow": {
        "context": { "id": 1, "type": "Context" },
        "custom_attribute_values": [{}],
        "custom_attributes": [{}],
        "cycles": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "is_verification_needed": "",
        "notify_custom_message": "",
        "notify_on_change": "",
        "object_approval": "",
        "object_folders": "",
        "recurrences": "",
        "repeat_every": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_groups": "",
        "title": "Object title",
        "unit": "",
        "workflow_people": "",
      }
    }

    Response body:
    {
      "workflow": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "custom_attribute_definitions": [{}],
        "custom_attribute_values": [{}],
        "cycles": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "folders": "",
        "id": 1,
        "is_verification_needed": "",
        "kind": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_cycle_start_date": "",
        "non_adjusted_next_cycle_start_date": "",
        "notify_custom_message": "",
        "notify_on_change": "",
        "object_approval": "",
        "object_folders": "",
        "people": "",
        "preconditions_failed": false,
        "recurrences": "",
        "repeat_every": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_groups": "",
        "title": "Object title",
        "type": "Workflow",
        "unit": "",
        "updated_at": "2015-08-14T14:24:43",
        "workflow_people": "",
        "workflow_state": "",
      }
    }

GET Example::


    GET /api/workflows/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "workflow": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "custom_attribute_definitions": [{}],
        "custom_attribute_values": [{}],
        "cycles": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "folders": "",
        "id": 1,
        "is_verification_needed": "",
        "kind": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_cycle_start_date": "",
        "non_adjusted_next_cycle_start_date": "",
        "notify_custom_message": "",
        "notify_on_change": "",
        "object_approval": "",
        "object_folders": "",
        "people": "",
        "preconditions_failed": false,
        "recurrences": "",
        "repeat_every": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_groups": "",
        "title": "Object title",
        "type": "Workflow",
        "unit": "",
        "updated_at": "2015-08-14T14:24:43",
        "workflow_people": "",
        "workflow_state": "",
      }
    }

PUT Example::

    PUT /api/workflows/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "workflow": {
        "context": { "id": 1, "type": "Context" },
        "custom_attribute_values": [{}],
        "custom_attributes": [{}],
        "cycles": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "is_verification_needed": "",
        "notify_custom_message": "",
        "notify_on_change": "",
        "object_approval": "",
        "object_folders": "",
        "recurrences": "",
        "repeat_every": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_groups": "",
        "title": "Object title",
        "unit": "",
        "workflow_people": "",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "workflow": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "custom_attribute_definitions": [{}],
        "custom_attribute_values": [{}],
        "cycles": "",
        "description": "Object <b>description</b>",
        "end_date": "2015-08-14",
        "folders": "",
        "id": 1,
        "is_verification_needed": "",
        "kind": "",
        "modified_by": { "id": 1, "type": "Person"},
        "next_cycle_start_date": "",
        "non_adjusted_next_cycle_start_date": "",
        "notify_custom_message": "",
        "notify_on_change": "",
        "object_approval": "",
        "object_folders": "",
        "people": "",
        "preconditions_failed": false,
        "recurrences": "",
        "repeat_every": "",
        "slug": "OBJECT-1",
        "start_date": "2015-08-14",
        "status": "Active",
        "task_groups": "",
        "title": "Object title",
        "type": "Workflow",
        "unit": "",
        "updated_at": "2015-08-14T14:24:43",
        "workflow_people": "",
        "workflow_state": "",
      }
    }

``/api/workflow_people``
------------------------

Methods::

    POST   /api/workflow_people
    GET    /api/workflow_people
    GET    /api/workflow_people/{id}
    PUT    /api/workflow_people/{id}
    DELETE /api/workflow_people/{id}

Model :class:`ggrc_workflows.models.workflow_person.WorkflowPerson`


POST Example::

    POST /api/workflow_people/

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Request body:
    {
      "workflow_person": {
        "context": { "id": 1, "type": "Context" },
        "person": "",
        "workflow": "",
      }
    }

    Response body:
    {
      "workflow_person": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "person": "",
        "type": "WorkflowPerson",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

GET Example::


    GET /api/workflow_people/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      x-requested-by:GGRC

    Response body:
    {
      "workflow_person": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "person": "",
        "type": "WorkflowPerson",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

PUT Example::

    PUT /api/workflow_people/1

    Request headers:
      content-type:application/json
      cookie:SACSID=<ID>;
             session=<SessionID>
      if-match:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      if-unmodified-since:Thu, 30 Mar 2017 10:51:14 GMT
      x-requested-by:GGRC

    Request body:
    {
      "workflow_person": {
        "context": { "id": 1, "type": "Context" },
        "person": "",
        "workflow": "",
      }
    }

    Response headers:
      content-type:application/json
      date:Mon, 16 Oct 2017 15:10:07 GMT
      etag:"d87058b07a1c1efe8bc2949033b5766db239fb9d"
      last-modified:Thu, 30 Mar 2017 10:51:14 GMT

    Response body:
    {
      "workflow_person": {
        "context": { "id": 1, "type": "Context" },
        "created_at": "2015-08-14T14:24:43",
        "id": 1,
        "modified_by": { "id": 1, "type": "Person"},
        "person": "",
        "type": "WorkflowPerson",
        "updated_at": "2015-08-14T14:24:43",
        "workflow": "",
      }
    }

