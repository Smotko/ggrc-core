
.. WARNING! This file is autogenerated and should not be edited manually.

Models
======

``Cycle``
---------

..  class:: ggrc_workflows.models.cycle.Cycle

    Workflow Cycle model
      

    Schema:

    ..  code-block:: sql

        CREATE TABLE cycles (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	workflow_id INTEGER NOT NULL, 
        	is_current BOOL NOT NULL, 
        	next_due_date DATE, 
        	secondary_contact_id INTEGER, 
        	contact_id INTEGER, 
        	is_verification_needed BOOL NOT NULL, 
        	status VARCHAR(250) NOT NULL, 
        	end_date DATE, 
        	start_date DATE, 
        	description TEXT, 
        	title VARCHAR(250) NOT NULL, 
        	slug VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CONSTRAINT uq_cycles UNIQUE (slug), 
        	FOREIGN KEY(workflow_id) REFERENCES workflows (id) ON DELETE CASCADE, 
        	CHECK (is_current IN (0, 1)), 
        	FOREIGN KEY(secondary_contact_id) REFERENCES people (id), 
        	FOREIGN KEY(contact_id) REFERENCES people (id), 
        	CHECK (is_verification_needed IN (0, 1)), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.WithContact`
    *   :class:`ggrc_workflows.models.mixins.CycleStatusValidatedMixin`
    *   :class:`ggrc_workflows.models.mixins.StatusValidatedMixin`
    *   :class:`ggrc.models.mixins.Stateful`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.models.mixins.notifiable.Notifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``CycleTaskEntry``
------------------

..  class:: ggrc_workflows.models.cycle_task_entry.CycleTaskEntry

    Workflow CycleTaskEntry model.

    Schema:

    ..  code-block:: sql

        CREATE TABLE cycle_task_entries (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	_is_declining_review BOOL, 
        	cycle_id INTEGER NOT NULL, 
        	cycle_task_group_object_task_id INTEGER NOT NULL, 
        	description TEXT, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CHECK (_is_declining_review IN (0, 1)), 
        	FOREIGN KEY(cycle_id) REFERENCES cycles (id) ON DELETE CASCADE, 
        	FOREIGN KEY(cycle_task_group_object_task_id) REFERENCES cycle_task_group_object_tasks (id) ON DELETE CASCADE, 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.relationship.Relatable`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``CycleTaskGroup``
------------------

..  class:: ggrc_workflows.models.cycle_task_group.CycleTaskGroup

    Cycle Task Group model.
      

    Schema:

    ..  code-block:: sql

        CREATE TABLE cycle_task_groups (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	cycle_id INTEGER NOT NULL, 
        	task_group_id INTEGER, 
        	sort_index VARCHAR(250) NOT NULL, 
        	next_due_date DATE, 
        	secondary_contact_id INTEGER, 
        	contact_id INTEGER, 
        	status VARCHAR(250) NOT NULL, 
        	slug VARCHAR(250) NOT NULL, 
        	end_date DATE, 
        	start_date DATE, 
        	description TEXT, 
        	title VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CONSTRAINT uq_cycle_task_groups UNIQUE (slug), 
        	FOREIGN KEY(cycle_id) REFERENCES cycles (id) ON DELETE CASCADE, 
        	FOREIGN KEY(task_group_id) REFERENCES task_groups (id), 
        	FOREIGN KEY(secondary_contact_id) REFERENCES people (id), 
        	FOREIGN KEY(contact_id) REFERENCES people (id), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.WithContact`
    *   :class:`ggrc_workflows.models.mixins.CycleTaskGroupRelatedStatusValidatedMixin`
    *   :class:`ggrc_workflows.models.mixins.StatusValidatedMixin`
    *   :class:`ggrc.models.mixins.Stateful`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``CycleTaskGroupObjectTask``
----------------------------

..  class:: ggrc_workflows.models.cycle_task_group_object_task.CycleTaskGroupObjectTask

    Cycle task model
      

    Schema:

    ..  code-block:: sql

        CREATE TABLE cycle_task_group_object_tasks (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	cycle_id INTEGER NOT NULL, 
        	cycle_task_group_id INTEGER NOT NULL, 
        	task_group_task_id INTEGER, 
        	task_type VARCHAR(250) NOT NULL, 
        	response_options TEXT NOT NULL, 
        	selected_response_options TEXT NOT NULL, 
        	sort_index VARCHAR(250) NOT NULL, 
        	finished_date DATETIME, 
        	verified_date DATETIME, 
        	secondary_contact_id INTEGER, 
        	contact_id INTEGER, 
        	status VARCHAR(250) NOT NULL, 
        	end_date DATE, 
        	start_date DATE, 
        	description TEXT, 
        	title VARCHAR(250) NOT NULL, 
        	slug VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CONSTRAINT uq_cycle_task_group_object_tasks UNIQUE (slug), 
        	FOREIGN KEY(cycle_id) REFERENCES cycles (id) ON DELETE CASCADE, 
        	FOREIGN KEY(cycle_task_group_id) REFERENCES cycle_task_groups (id) ON DELETE CASCADE, 
        	FOREIGN KEY(task_group_task_id) REFERENCES task_group_tasks (id), 
        	FOREIGN KEY(secondary_contact_id) REFERENCES people (id), 
        	FOREIGN KEY(contact_id) REFERENCES people (id), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.WithContact`
    *   :class:`ggrc_workflows.models.mixins.CycleTaskStatusValidatedMixin`
    *   :class:`ggrc_workflows.models.mixins.CycleTaskGroupRelatedStatusValidatedMixin`
    *   :class:`ggrc_workflows.models.mixins.StatusValidatedMixin`
    *   :class:`ggrc.models.mixins.Stateful`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.relationship.Relatable`
    *   :class:`ggrc.models.mixins.notifiable.Notifiable`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``TaskGroup``
-------------

..  class:: ggrc_workflows.models.task_group.TaskGroup

    Workflow TaskGroup model.

    Schema:

    ..  code-block:: sql

        CREATE TABLE task_groups (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	workflow_id INTEGER NOT NULL, 
        	lock_task_order BOOL, 
        	sort_index VARCHAR(250) NOT NULL, 
        	secondary_contact_id INTEGER, 
        	contact_id INTEGER, 
        	end_date DATE, 
        	start_date DATE, 
        	description TEXT, 
        	title VARCHAR(250) NOT NULL, 
        	slug VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CONSTRAINT uq_task_groups UNIQUE (slug), 
        	FOREIGN KEY(workflow_id) REFERENCES workflows (id) ON DELETE CASCADE, 
        	CHECK (lock_task_order IN (0, 1)), 
        	FOREIGN KEY(secondary_contact_id) REFERENCES people (id), 
        	FOREIGN KEY(contact_id) REFERENCES people (id), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.WithContact`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``TaskGroupObject``
-------------------

..  class:: ggrc_workflows.models.task_group_object.TaskGroupObject

    Workflow TaskGroupObject model.

    Schema:

    ..  code-block:: sql

        CREATE TABLE task_group_objects (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	task_group_id INTEGER NOT NULL, 
        	object_id INTEGER NOT NULL, 
        	object_type VARCHAR(250) NOT NULL, 
        	end_date DATE, 
        	start_date DATE, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	UNIQUE (task_group_id, object_id, object_type), 
        	FOREIGN KEY(task_group_id) REFERENCES task_groups (id) ON DELETE CASCADE, 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`


``TaskGroupTask``
-----------------

..  class:: ggrc_workflows.models.task_group_task.TaskGroupTask

    Workflow TaskGroupTask model.

    Schema:

    ..  code-block:: sql

        CREATE TABLE task_group_tasks (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	task_group_id INTEGER NOT NULL, 
        	sort_index VARCHAR(250) NOT NULL, 
        	object_approval BOOL NOT NULL, 
        	task_type VARCHAR(250) NOT NULL, 
        	response_options TEXT NOT NULL, 
        	secondary_contact_id INTEGER, 
        	contact_id INTEGER, 
        	title VARCHAR(250) NOT NULL, 
        	description TEXT, 
        	slug VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	end_date DATE, 
        	start_date DATE, 
        	PRIMARY KEY (id), 
        	CHECK (start_date <= end_date), 
        	CONSTRAINT uq_task_group_tasks UNIQUE (slug), 
        	FOREIGN KEY(task_group_id) REFERENCES task_groups (id) ON DELETE CASCADE, 
        	CHECK (object_approval IN (0, 1)), 
        	FOREIGN KEY(secondary_contact_id) REFERENCES people (id), 
        	FOREIGN KEY(contact_id) REFERENCES people (id), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.WithContact`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``Workflow``
------------

..  class:: ggrc_workflows.models.workflow.Workflow

    Basic Workflow first class object.
      

    Schema:

    ..  code-block:: sql

        CREATE TABLE workflows (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	notify_on_change BOOL NOT NULL, 
        	notify_custom_message TEXT, 
        	object_approval BOOL NOT NULL, 
        	recurrences BOOL NOT NULL, 
        	next_cycle_start_date DATE, 
        	non_adjusted_next_cycle_start_date DATE, 
        	is_old_workflow BOOL, 
        	kind VARCHAR(250), 
        	is_verification_needed BOOL NOT NULL, 
        	repeat_every INTEGER, 
        	unit ENUM('day','week','month'), 
        	repeat_multiplier INTEGER NOT NULL, 
        	end_date DATE, 
        	start_date DATE, 
        	description TEXT, 
        	title VARCHAR(250) NOT NULL, 
        	status VARCHAR(250) NOT NULL, 
        	slug VARCHAR(250) NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	CONSTRAINT uq_workflows UNIQUE (slug), 
        	CHECK (notify_on_change IN (0, 1)), 
        	CHECK (object_approval IN (0, 1)), 
        	CHECK (recurrences IN (0, 1)), 
        	CHECK (is_old_workflow IN (0, 1)), 
        	CHECK (is_verification_needed IN (0, 1)), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc_gdrive_integration.models.object_folder.Folderable`
    *   :class:`ggrc.models.mixins.customattributable.CustomAttributable`
    *   :class:`ggrc.models.context.HasOwnContext`
    *   :class:`ggrc.models.mixins.Timeboxed`
    *   :class:`ggrc.models.mixins.Described`
    *   :class:`ggrc.models.mixins.Titled`
    *   :class:`ggrc.models.mixins.notifiable.Notifiable`
    *   :class:`ggrc.models.mixins.Stateful`
    *   :class:`ggrc.models.mixins.Slugged`
    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`
    *   :class:`ggrc.fulltext.mixin.Indexed`


``WorkflowPerson``
------------------

..  class:: ggrc_workflows.models.workflow_person.WorkflowPerson

    Workflow WorkflowPerson model.

    Schema:

    ..  code-block:: sql

        CREATE TABLE workflow_people (
        	id INTEGER NOT NULL AUTO_INCREMENT, 
        	workflow_id INTEGER NOT NULL, 
        	person_id INTEGER NOT NULL, 
        	updated_at DATETIME NOT NULL, 
        	modified_by_id INTEGER, 
        	created_at DATETIME NOT NULL, 
        	context_id INTEGER, 
        	PRIMARY KEY (id), 
        	UNIQUE (workflow_id, person_id), 
        	FOREIGN KEY(workflow_id) REFERENCES workflows (id) ON DELETE CASCADE, 
        	FOREIGN KEY(person_id) REFERENCES people (id), 
        	FOREIGN KEY(context_id) REFERENCES contexts (id)
        )

    Mixins:

    *   :class:`ggrc.models.mixins.Base`
    *   :class:`ggrc.models.mixins.ChangeTracked`
    *   :class:`ggrc.models.mixins.ContextRBAC`
    *   :class:`ggrc.models.mixins.Identifiable`


